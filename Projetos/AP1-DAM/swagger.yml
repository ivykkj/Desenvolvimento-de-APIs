swagger: "2.0"
info:
  title: Escola API
  description: API para gerenciamento de Professores, Turmas e Alunos.
  version: "1.0.1"
basePath: /api 

tags:
  - name: Alunos
    description: Operações relacionadas à entidade Alunos
  - name: Professores
    description: Operações relacionadas à entidade Professores
  - name: Turmas
    description: Operações relacionadas à entidade Turmas

definitions:
  Professor:
    type: object
    properties:
      id:
        type: integer
        example: 1
      nome:
        type: string
        example: "Carlos Alberto"
      idade:
        type: integer
        example: 42
      materia:
        type: string
        example: "Engenharia de Software"
      observacoes:
        type: string
        example: "Professor com 15 anos de experiência."
  Turma:
    type: object
    properties:
      id:
        type: integer
        example: 1
      descricao:
        type: string
        example: "Análise e Desenv. de Sistemas - Noite"
      ativo:
        type: boolean
        example: true
      professor_id:
        type: integer
        example: 1
  Aluno:
    type: object
    properties:
      id:
        type: integer
        example: 1
      nome:
        type: string
        example: "Cauan Melo"
      idade:
        type: integer
        example: 19
      data_nascimento:
        type: string
        format: date
        example: "25/02/2006"
      nota_1_semestre:
        type: number
        format: float
        example: 8.5
      nota_2_semestre:
        type: number
        format: float
        example: 9.0
      media_final:
        type: number
        format: float
        example: 8.75
      turma_id:
        type: integer
        example: 1

  ProfessorInput:
    type: object
    required: [nome, idade, materia]
    properties:
      nome:
        type: string
        example: "Carlos Alberto"
      idade:
        type: integer
        example: 42
      materia:
        type: string
        example: "Engenharia de Software"
      observacoes:
        type: string
        example: ""
  TurmaInput:
    type: object
    required: [descricao, professor_id]
    properties:
      descricao:
        type: string
        example: "Análise e Desenv. de Sistemas - Noite"
      ativo:
        type: boolean
        example: true
      professor_id:
        type: integer
        example: 1
  AlunoInput:
    type: object
    required: [nome, idade, data_nascimento, nota_primeiro_semestre, nota_segundo_semestre, turma_id]
    properties:
      nome:
        type: string
        example: "Cauan Melo"
      idade:
        type: integer
        example: 19
      data_nascimento:
        type: string
        format: date
        example: "25/02/2006"
      nota_1_semestre:
        type: number
        format: float
        example: 8.5
      nota_2_semestre:
        type: number
        format: float
        example: 9.0
      turma_id:
        type: integer
        example: 1

paths:
  /alunos:
    get:
      tags: [Alunos]
      summary: Lista todos os alunos
      description: Retorna uma lista com todos os alunos cadastrados no sistema.
      responses:
        '200':
          description: Sucesso - Lista de alunos retornada.
          schema:
            type: array
            items:
              $ref: '#/definitions/Aluno'
    post:
      tags: [Alunos]
      summary: Cria um novo aluno
      description: Cadastra um novo aluno no sistema.
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/AlunoInput'
      responses:
        '201':
          description: Aluno criado com sucesso.
          schema:
            $ref: '#/definitions/Aluno'
        '400':
          description: Erro de validação nos dados enviados.

  /alunos/{id}:
    get:
      tags: [Alunos]
      summary: Busca um aluno por ID
      parameters:
        - name: id
          in: path
          type: integer
          required: true
      responses:
        '200':
          description: Sucesso - Dados do aluno.
          schema:
            $ref: '#/definitions/Aluno'
        '404':
          description: Aluno não encontrado.
    put:
      tags: [Alunos]
      summary: Atualiza um aluno existente
      parameters:
        - name: id
          in: path
          type: integer
          required: true
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/AlunoInput'
      responses:
        '200':
          description: Aluno atualizado com sucesso.
          schema:
            $ref: '#/definitions/Aluno'
        '404':
          description: Aluno não encontrado.
    delete:
      tags: [Alunos]
      summary: Deleta um aluno
      parameters:
        - name: id
          in: path
          type: integer
          required: true
      responses:
        '204':
          description: Aluno deletado com sucesso (sem conteúdo no corpo da resposta).
        '404':
          description: Aluno não encontrado.

  /professores:
    get:
      tags: [Professores]
      summary: Lista todos os professores
      description: Retorna uma lista com todos os professores cadastrados.
      responses:
        '200':
          description: Sucesso - Lista de professores retornada.
          schema:
            type: array
            items:
              $ref: '#/definitions/Professor'
    post:
      tags: [Professores]
      summary: Cria um novo professor
      description: Cadastra um novo professor no sistema.
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ProfessorInput'
      responses:
        '201':
          description: Professor criado com sucesso.
          schema:
            $ref: '#/definitions/Professor'
        '400':
          description: Erro de validação nos dados enviados.

  /professores/{id}:
    get:
      tags: [Professores]
      summary: Busca um professor por ID
      parameters:
        - name: id
          in: path
          type: integer
          required: true
      responses:
        '200':
          description: Sucesso - Dados do professor.
          schema:
            $ref: '#/definitions/Professor'
        '404':
          description: Professor não encontrado.
    put:
      tags: [Professores]
      summary: Atualiza um professor existente
      parameters:
        - name: id
          in: path
          type: integer
          required: true
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ProfessorInput'
      responses:
        '200':
          description: Professor atualizado com sucesso.
          schema:
            $ref: '#/definitions/Professor'
        '404':
          description: Professor não encontrado.
    delete:
      tags: [Professores]
      summary: Deleta um professor
      parameters:
        - name: id
          in: path
          type: integer
          required: true
      responses:
        '204':
          description: Professor deletado com sucesso.
        '404':
          description: Professor não encontrado.

  /turmas:
    get:
      tags: [Turmas]
      summary: Lista todas as turmas
      description: Retorna uma lista com todas as turmas cadastradas.
      responses:
        '200':
          description: Sucesso - Lista de turmas retornada.
          schema:
            type: array
            items:
              $ref: '#/definitions/Turma'
    post:
      tags: [Turmas]
      summary: Cria uma nova turma
      description: Cadastra uma nova turma no sistema, associando a um professor existente.
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/TurmaInput'
      responses:
        '201':
          description: Turma criada com sucesso.
          schema:
            $ref: '#/definitions/Turma'
        '400':
          description: Erro de validação ou professor_id não encontrado.

  /turmas/{id}:
    get:
      tags: [Turmas]
      summary: Busca uma turma por ID
      parameters:
        - name: id
          in: path
          type: integer
          required: true
      responses:
        '200':
          description: Sucesso - Dados da turma.
          schema:
            $ref: '#/definitions/Turma'
        '404':
          description: Turma não encontrada.
    put:
      tags: [Turmas]
      summary: Atualiza uma turma existente
      parameters:
        - name: id
          in: path
          type: integer
          required: true
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/TurmaInput'
      responses:
        '200':
          description: Turma atualizada com sucesso.
          schema:
            $ref: '#/definitions/Turma'
        '404':
          description: Turma não encontrada.
    delete:
      tags: [Turmas]
      summary: Deleta uma turma
      parameters:
        - name: id
          in: path
          type: integer
          required: true
      responses:
        '204':
          description: Turma deletada com sucesso.
        '404':
          description: Turma não encontrada.